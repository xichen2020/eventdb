syntax = "proto3";

option go_package = "github.com/xichen2020/eventdb/generated/proto/servicepb";

package servicepb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/xichen2020/eventdb/generated/proto/servicepb/document.proto";
import "github.com/xichen2020/eventdb/generated/proto/servicepb/query.proto";
import "github.com/xichen2020/eventdb/generated/proto/servicepb/value.proto";

service eventdb {
  // Health returns the db health status.
  rpc Health(HealthRequest) returns (HealthResult) {}

  // Write writes a list of documents.
  rpc Write(WriteRequest) returns (WriteResults) {}

  // QueryRaw performs a raw query.
  rpc QueryRaw(RawQuery) returns (RawQueryResults) {}

  // QueryGrouped performs a grouped query.
  rpc QueryGrouped(GroupedQuery) returns (GroupedQueryResults) {}

  // QueryTimeBucket performs a time bucket query.
  rpc QueryTimeBucket(TimeBucketQuery) returns (TimeBucketQueryResults) {}
}

message HealthRequest {}

message HealthResult {
  bool is_healthy = 1;
  string status_msg = 2;
}

message WriteRequest {
  bytes Namespace = 1;
  repeated Document docs = 2 [(gogoproto.nullable) = false];
}

message WriteResults {}

message RawQueryResults {
  repeated bytes raw = 1;
}

message SingleKeyGroupQueryResult {
  FieldValue key = 1 [(gogoproto.nullable) = false];
  repeated CalculationValue values = 2 [(gogoproto.nullable) = false];
}

message SingleKeyGroupQueryResults {
  repeated SingleKeyGroupQueryResult groups = 1 [(gogoproto.nullable) = false];
}

message MultiKeyGroupQueryResult {
  repeated FieldValue key = 1 [(gogoproto.nullable) = false];
  repeated CalculationValue values = 2 [(gogoproto.nullable) = false];
}

message MultiKeyGroupQueryResults {
  repeated MultiKeyGroupQueryResult groups = 1 [(gogoproto.nullable) = false];
}

message GroupedQueryResults {
  oneof results {
    SingleKeyGroupQueryResults single_key = 1;
    MultiKeyGroupQueryResults multi_key = 2;
  }
}

message TimeBucketQueryResult {
  int64 start_at_nanos = 1;
  int64 value = 2;
}

message TimeBucketQueryResults {
  int64 granularity_nanos = 1;
  repeated TimeBucketQueryResult buckets = 2 [(gogoproto.nullable) = false];
}

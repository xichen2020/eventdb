// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/mauricelam/genny

package field

import "github.com/xichen2020/eventdb/values/iterator"
import (
	"github.com/xichen2020/eventdb/document/field"

	"github.com/xichen2020/eventdb/index"

	xerrors "github.com/m3db/m3x/errors"
)

type timeFieldIterator struct {
	docIt        index.DocIDSetIterator
	valIt        iterator.ForwardTimeIterator
	valAsUnionFn field.TimeAsUnionFn

	done      bool
	err       error
	currDocID int32
	currValue int64
}

func newTimeFieldIterator(
	docIt index.DocIDSetIterator,
	valIt iterator.ForwardTimeIterator,
	valAsUnionFn field.TimeAsUnionFn,
) *timeFieldIterator {
	return &timeFieldIterator{
		docIt:        docIt,
		valIt:        valIt,
		valAsUnionFn: valAsUnionFn,
	}
}

func (it *timeFieldIterator) Next() bool {
	if it.done || it.err != nil {
		return false
	}
	if !it.docIt.Next() || !it.valIt.Next() {
		it.done = true
		// TODO(xichen): Add doc it errors as well.
		var multiErr xerrors.MultiError
		if err := it.valIt.Err(); err != nil {
			multiErr = multiErr.Add(err)
		}
		it.err = multiErr.FinalError()
		return false
	}
	it.currDocID = it.docIt.DocID()
	it.currValue = it.valIt.Current()
	return true
}

func (it *timeFieldIterator) DocID() int32 { return it.currDocID }

func (it *timeFieldIterator) Value() int64 { return it.currValue }

func (it *timeFieldIterator) ValueUnion() field.ValueUnion {
	// NB(xichen): This should be inlined.
	return it.valAsUnionFn(it.currValue)
}

func (it *timeFieldIterator) Err() error { return it.err }

func (it *timeFieldIterator) Close() {
	it.docIt.Close()
	it.docIt = nil
	it.valIt.Close()
	it.valIt = nil
	it.err = nil
}
